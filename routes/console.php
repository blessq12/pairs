<?php

use Illuminate\Foundation\Inspiring;
use Illuminate\Support\Facades\Artisan;
use Illuminate\Support\Facades\Schedule;
use Illuminate\Support\Facades\Log;

// –û—Å–Ω–æ–≤–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –∞—Ä–±–∏—Ç—Ä–∞–∂–∞ - –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
Schedule::command('arbitrage:run')
    ->everyFiveMinutes()
    ->withoutOverlapping()
    ->runInBackground()
    ->onSuccess(function () {
        Log::info('–ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∞—Ä–±–∏—Ç—Ä–∞–∂–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ');
    })
    ->onFailure(function () {
        Log::error('–ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∞—Ä–±–∏—Ç—Ä–∞–∂–∞ –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π');
    });

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–∏—Å—Ç–µ–º—ã –∫–∞–∂–¥—ã–π —á–∞—Å
Schedule::command('arbitrage:status')
    ->hourly()
    ->withoutOverlapping()
    ->runInBackground();

// –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∞—Ä–±–∏—Ç—Ä–∞–∂–Ω—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 2:00
Schedule::call(function () {
    $cutoffDate = now()->subDays(7); // –£–¥–∞–ª—è–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å—Ç–∞—Ä—à–µ 7 –¥–Ω–µ–π
    $deleted = \App\Models\ArbitrageOpportunity::where('created_at', '<', $cutoffDate)->delete();
    Log::info("–û—á–∏—â–µ–Ω–æ {$deleted} —Å—Ç–∞—Ä—ã—Ö –∞—Ä–±–∏—Ç—Ä–∞–∂–Ω—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π");
})->dailyAt('02:00')
    ->name('cleanup-arbitrage-opportunities')
    ->withoutOverlapping();

// –û—Ç–ø—Ä–∞–≤–∫–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞ –≤ 9:00
Schedule::call(function () {
    $yesterday = now()->subDay();
    $opportunities = \App\Models\ArbitrageOpportunity::whereDate('created_at', $yesterday)->count();
    $totalProfit = \App\Models\ArbitrageOpportunity::whereDate('created_at', $yesterday)->sum('profit_usd');

    $message = "üìä <b>–ï–ñ–ï–î–ù–ï–í–ù–´–ô –û–¢–ß–ï–¢</b>\n\n";
    $message .= "üìÖ –î–∞—Ç–∞: " . $yesterday->format('d.m.Y') . "\n";
    $message .= "üí∞ –ù–∞–π–¥–µ–Ω–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π: {$opportunities}\n";
    $message .= "üíµ –û–±—â–∏–π –ø—Ä–æ—Ñ–∏—Ç: \${$totalProfit}\n";
    $message .= "‚è∞ –û—Ç—á–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω: " . now()->format('H:i:s');

    $telegramService = app(\App\Services\TelegramService::class);
    if ($telegramService->isConfigured()) {
        $telegramService->sendMessage($message);
    }
})->dailyAt('09:00')
    ->name('daily-arbitrage-report')
    ->withoutOverlapping();
