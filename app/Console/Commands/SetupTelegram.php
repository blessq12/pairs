<?php

namespace App\Console\Commands;

use App\Models\Setting;
use App\Services\TelegramService;
use Illuminate\Console\Command;

class SetupTelegram extends Command
{
    protected $signature = 'pairs:setup-telegram {--token= : –¢–æ–∫–µ–Ω –±–æ—Ç–∞} {--chat-id= : ID —á–∞—Ç–∞} {--test : –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ}';
    protected $description = '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π';

    private TelegramService $telegramService;

    public function __construct(TelegramService $telegramService)
    {
        parent::__construct();
        $this->telegramService = $telegramService;
    }

    public function handle(): void
    {
        $this->info('ü§ñ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π...');

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º
        if ($this->option('test')) {
            $this->sendTestMessage();
            return;
        }

        $token = $this->option('token');
        $chatId = $this->option('chat-id');

        if (!$token || !$chatId) {
            $this->error('‚ùå –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å --token –∏ --chat-id');
            $this->info('–ü—Ä–∏–º–µ—Ä: php artisan pairs:setup-telegram --token="1234567890:ABC..." --chat-id="-1001234567890"');
            return;
        }

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        Setting::set('telegram_bot_token', $token);
        Setting::set('telegram_chat_id', $chatId);

        $this->info('‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã');

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
        $this->info('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram...');
        
        if ($this->telegramService->isConfigured()) {
            $this->info('‚úÖ Telegram –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
            
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            $this->info('üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ...');
            $success = $this->telegramService->sendTestMessage();
            
            if ($success) {
                $this->info('‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
            } else {
                $this->error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ');
            }
        } else {
            $this->error('‚ùå Telegram –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
        }
    }

    private function sendTestMessage(): void
    {
        $this->info('üß™ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ...');
        
        if (!$this->telegramService->isConfigured()) {
            $this->error('‚ùå Telegram –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –°–Ω–∞—á–∞–ª–∞ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ —Ç–æ–∫–µ–Ω –∏ ID —á–∞—Ç–∞.');
            return;
        }
        
        $success = $this->telegramService->sendTestMessage();
        
        if ($success) {
            $this->info('‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
        } else {
            $this->error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ');
        }
    }
}
